<?xml version="1.0"?>

<project name="jspm" default="build" basedir=".">

	<property file="local.properties" />
	<property file="project.properties" />

	<import>
		<fileset dir="macros">
			<include name="*.xml" />
		</fileset>
	</import>

	<target name="compile">
		<mkdir dir="build/classes" />
		<javac srcdir="src"
				destdir="build/classes"
				includeAntRuntime="false"
				deprecation="on"
				debug="on"
				optimize="off">
			<compilerarg value="-encoding" />
			<compilerarg value="ascii" />
		</javac>
		<javac srcdir="antsrc"
				destdir="build/classes"
				includeAntRuntime="true"
				deprecation="on"
				debug="on"
				optimize="off">
			<compilerarg value="-encoding" />
			<compilerarg value="ascii" />
		</javac>
		<copy file="antsrc/com/exedio/jspm/ant.properties" todir="build/classes/com/exedio/jspm" />
	</target>

	<target name="taskdef" depends="compile">
		<taskdef
				resource="com/exedio/jspm/ant.properties"
				classpath="build/classes" />
	</target>

	<target name="test.jspm" depends="taskdef">
		<jspm method="append" verbose="true" charset="us-ascii" sourceReferenceTargetPosition="90">
			<fileset dir="testsrc" includes="com/exedio/jspm/test/Test.jspm" />
		</jspm>
		<jspm addSourceReferences="false">
			<fileset dir="testsrc" includes="com/exedio/jspm/test/Mock.jspm" />
		</jspm>
	</target>

	<target name="jspm" depends="test.jspm" />

	<target name="test.compile" depends="test.jspm">
		<mkdir dir="build/testclasses" />
		<javac srcdir="testsrc"
				destdir="build/testclasses"
				includeAntRuntime="false"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="build/classes" />
				<pathelement location="lib/junit.jar" />
			</classpath>
			<compilerarg value="-Xlint" />
			<compilerarg value="-encoding" />
			<compilerarg value="ascii" />
		</javac>
	</target>

	<target name="test.run" depends="test.compile">
		<mkdir dir="build/testresults" />
		<junit fork="yes"
				 haltonerror="true" haltonfailure="true"
				 showoutput="true" printsummary="true">
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<classpath>
				<pathelement location="build/classes" />
				<pathelement location="build/testclasses" />
				<pathelement location="lib/junit.jar" />
			</classpath>
			<test name="com.exedio.jspm.PackageTest" todir="build/testresults" outfile="jspm" />
			<assertions><enable/></assertions>
		</junit>
	</target>

	<target name="test" depends="test.run" />

	<target name="jar" depends="compile">
		<jar jarfile="build/exedio-jspm.jar" basedir="build/classes" filesonly="true" duplicate="fail" strict="fail" level="9">
			<manifest>
				<attribute name="Specification-Title" value="exedio jspm"/>
				<attribute name="Specification-Version" value="${build.tag}"/>
				<attribute name="Specification-Vendor" value="exedio GmbH"/>
				<attribute name="Implementation-Title" value="exedio jspm"/>
				<attribute name="Implementation-Version" value="${build.tag}"/>
				<attribute name="Implementation-Vendor" value="exedio GmbH"/>
			</manifest>
		</jar>
	</target>

	<target name="findbugs" depends="compile, test.compile, findbugs.taskdef">
		<findbugs
					home="${basedir}/build/findbugs-home"
					jvmargs="-Xmx512M"
					failOnError="true"
					warningsProperty="findbugs.warnings"
					output="${findbugs.output}"
					outputFile="${basedir}/build/findbugs.${findbugs.output}"
					excludeFilter="conf/findbugs-exclude.xml"
					effort="max"
					reportlevel="low">
			<class location="${basedir}/build/classes" />
			<class location="${basedir}/build/testclasses" />
			<auxclasspath>
				<pathelement location="${basedir}/lib/junit.jar" />
				<pathelement location="${ant.core.lib}" />
			</auxclasspath>
		</findbugs>
	</target>

	<target name="clean">
		<delete dir="build" />
		<delete>
			<fileset dir="testsrc">
				<include name="**/*_Jspm.java" />
			</fileset>
		</delete>
	</target>

	<target name="src" depends="jspm" description="creates all sources, so the IDE does not complain" />
	<target name="build" depends="compile, jar, test" />
	<target name="all" depends="build, findbugs" />

	<target name="jenkins" depends="all">
		<copy todir="${basedir}/build/success">
			<fileset file="${basedir}/build/exedio-jspm.jar" />
			<fileset file="${basedir}/exedio-jspm-log.txt" />
		</copy>
		<copy file="ivy.xml" tofile="build/success/ivy.xml" overwrite="true">
			<filterset>
				<filter token="BUILD_REVISION" value="${build.revision}" />
			</filterset>
		</copy>
	</target>

</project>
